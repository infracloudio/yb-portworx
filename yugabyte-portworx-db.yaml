# 
# Overall Design:
#   There are two Kubernetes StatefulSets in this yaml file - yb-master and yb-tserver. Each of
#   these has the following:
#    - a headless service to expose a DNS entry for discovery
#    - a service to expose end-points to the outside world
#    - the stateful set itself
#    - a load-balancer service to view the universe dashboard UI
#
# Using YB with k8s
#    - Create cluster    : kubectl apply -f yugabyte-cluster.yaml
#    - List the pods     : kubectl get pods
#    - Run ysqlsh         : kubectl exec -it yb-tserver-0 /home/yugabyte/bin/ysqlsh
#    - Connect to the ui : kubectl port-forward yb-master-0 7000
#                          You can now view the UI at http://localhost:7000
#    - Destroy cluster   : kubectl delete -f yugabyte-cluster.yaml
apiVersion: v1
kind: Namespace
metadata: 
    name: yb-px-db
---
apiVersion: v1
kind: Service
metadata:
  # This is a "headless" service for the yb-master which exists to allow discovery of the set of
  # member pods (masters). The CNAME of this service points to SRV records - one for each Pod that
  # is Running and Ready). Read more in the Kubernetes docs:
  # https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/
  namespace: yb-px-db
  name: yb-masters
  labels:
    app: yb-master
spec:
  clusterIP: None
  ports:
  - name: ui
    port: 7000
  - name: rpc-port
    port: 7100
  selector:
    app: yb-master
---
apiVersion: v1
kind: Service
metadata:
  namespace: yb-px-db
  name: yb-master-ui
  labels:
    app: yb-master
spec:
  clusterIP:
  ports:
  - name: ui
    port: 7000
  selector:
    app: yb-master
  type: LoadBalancer
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
   namespace: yb-px-db
   name: portworx-sc
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "1"
  io_profile: "db"
  disable_io_profile_protection: "1"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: yb-px-db
  name: yb-master
  labels:
    app: yb-master
spec:
  serviceName: yb-masters
  podManagementPolicy: "Parallel"
  replicas: 3
  selector:
    matchLabels:
      app: yb-master
  template:
    metadata:
      namespace: yb-px-db
      labels:
        app: yb-master
    spec:
      affinity:
        # Set the anti-affinity selector scope to YB masters.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - yb-master
              topologyKey: kubernetes.io/hostname
      containers:
      - name: yb-master
        image: yugabytedb/yugabyte:latest
        imagePullPolicy: Always
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
                fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
          - "/home/yugabyte/bin/yb-master"
          - "--fs_data_dirs=/mnt/data0/$(POD_NAME)"
          - "--rpc_bind_addresses=$(POD_IP):7100"
          - "--server_broadcast_addresses=$(POD_NAME).yb-masters:7100"
          - "--use_private_ip=never"
          - "--master_addresses=yb-masters.$(POD_NAMESPACE).svc.cluster.local:7100"
          # To disable YugaByte SQL API functionality, comment the
          # "use_initial_sys_catalog_snapshot" flag below.
          # Flag support added after version 1.3.
          - "--use_initial_sys_catalog_snapshot=true"
          - "--master_replication_factor=3"
          - "--logtostderr"
        ports:
        - containerPort: 7000
          name: master-ui
        - containerPort: 7100
          name: master-rpc
        volumeMounts:
        - name: datadir0
          mountPath: /mnt/data0
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd        
  volumeClaimTemplates:
    - metadata:
        name: datadir0
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
        storageClassName: portworx-sc  
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
  # This is a "headless" service for the yb-tserver which exists to allow discovery of the set of
  # member pods (tservers).
  namespace: yb-px-db
  name: yb-tservers
  labels:
    app: yb-tserver
spec:
  clusterIP: None
  ports:
  - name: ui
    port: 9000
  - name: rpc-port
    port: 9100
  - name: cassandra
    port: 9042
  - name: redis
    port: 6379
  - name: postgres
    port: 5433
  selector:
    app: yb-tserver
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: yb-px-db
  name: yb-tserver
  labels:
    app: yb-tserver
spec:
  serviceName: yb-tservers
  podManagementPolicy: "Parallel"
  replicas: 3
  selector:
    matchLabels:
      app: yb-tserver
  template:
    metadata:
      namespace: yb-px-db
      labels:
        app: yb-tserver
    spec:
      affinity:
        # Set the anti-affinity selector scope to YB tservers here.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - yb-tserver
              topologyKey: kubernetes.io/hostname
      containers:
      - name: yb-tserver
        image: yugabytedb/yugabyte:latest
        imagePullPolicy: Always
        env:
          - name: GET_HOSTS_FROM
            value: dns
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        command:
          - "/home/yugabyte/bin/yb-tserver"
          - "--fs_data_dirs=/mnt/data1/$(POD_NAME)"
          - "--rpc_bind_addresses=$(POD_IP):9100"
          - "--server_broadcast_addresses=$(POD_NAME).yb-tservers:9100"
          # To disable YugaByte SQL API functionality, comment the below two pgsql_xx flags.
          - "--start_pgsql_proxy"
          - "--pgsql_proxy_bind_address=$(POD_IP):5433"
          - "--use_private_ip=never"
          - "--tserver_master_addrs=yb-masters.$(POD_NAMESPACE).svc.cluster.local:7100"
          - "--tserver_master_replication_factor=3"
          - "--logtostderr"
        ports:
        - containerPort: 9000
          name: tserver-ui
        - containerPort: 9100
          name: tserver-rpc
        - containerPort: 9042
          name: cassandra
        - containerPort: 6379
          name: redis
        - containerPort: 5433
          name: postgres
        volumeMounts:
        - name: datadir1
          mountPath: /mnt/data1
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd 
  volumeClaimTemplates:
  - metadata:
        name: datadir1
    spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
        storageClassName: portworx-sc
  updateStrategy:
    type: RollingUpdate
